.\"  <!-- $Id: maildropgdbm.7,v 1.1 2005/12/01 08:51:00 arzen Exp $ -->
.\"  <!-- Copyright 1998 - 2001 Double Precision, Inc.  See COPYING for -->
.\"  <!-- distribution information. -->
.\" This manpage has been automatically generated by docbook2man 
.\" from a DocBook document.  This tool can be found at:
.\" <http://shell.ipoline.com/~elmert/comp/docbook2X/> 
.\" Please send any bug reports, improvements, comments, patches, 
.\" etc. to Steve Cheng <steve@ggi-project.org>.
.TH "MAILDROPGDBM" "7" "30 October 2004" "Double Precision, Inc." ""

.SH NAME
maildropgdbm \- GDBM/DB support in maildrop
.SH SYNOPSIS
.PP

.nf
gdbmopen(filename, mode)

gdbmclose

gdbmfetch(key [,default])

gdbmstore(key,value)
.fi
.SH "DESCRIPTION"
.PP
The gdbm family of functions provides access to the GDBM library - a library
of routines that manage simple database files. The library provides a way of
quickly storing and looking up key/data pairs.
.PP
GDBM support in \fBmaildrop\fR is optional, and may not be
available to you.
.PP
GDBM support in \fBmaildrop\fR can optionally be
implemented using the DB library. This option is selected by the system
administrator. If this is the
case, these functions still work exactly as described below, except that they
will operate on DB hash files, instead of GDBM files.
.PP
To see whether GDBM or DB support is used, run the command
"\fBmaildrop -v"\fR\&.
.PP
GDBM support is minimal, and simplistic. A filter file may have only one
gdbm file open at the same time. However, the filter file can close the
current gdbm file, and open another one. If another filter file is included
using the include statement, the included filter file may open its own,
separate, gdbm file.
.PP
A GDBM file contains a list of key/value pairs. All keys in the GDBM file
are unique. After storing an arbitary key/value pair in the GDBM file, the
value associated with the given key can be quickly located and
retrieved.
.SS "GDBMCLOSE - CLOSE GDBM FILE"
.sp
.RS
.PP

.nf
gdbmclose
.fi
.RE
.PP
This function closes the current GDBM file.
.SS "GDBMFETCH - RETRIEVE DATA"
.sp
.RS
.PP

.nf
gdbmfetch (\fIkey\fR [, \fIoptions\fR] [, \fIdefault\fR])
.fi
.RE
.PP
This function retrieves the data for the given key.
\fIkey\fR is the key
to retrieve. The \fBgdbmfetch\fR function returns the data
associated with
this key. If the key does not exist in the GDBM file,
\fBgdbmfetch\fR returns
the \fBdefault\fR argument. If the \fBdefault\fR
argument is not specified,
\fBgdbmfetch\fR returns empty text. Please note that the
\fBdefault\fR
argument is not actually evaluated unless the key does not exist in the GDBM
file.
.PP
The \fIoptions\fR argument specifies additional
\fBmaildrop\fR value-added features.
The following functionality is not
available in the GDBM library, but is rather provided by
\fBmaildrop\fR\&.
.PP
If the \fIoptions\fR argument is set to "D", and the key could not be found in
the GDBM database, and the key is of the form "user@domain", \fBmaildrop\fR
will then attempt to look up the key "user@". If that key is also not found,
\fBmaildrop\fR finally looks up the key "domain".
.PP
If "domain" is also not found, and domain is of the form
"a.b.c.d.tld"
(with variable number of period-separated sections),
\fBmaildrop\fR then
attempts to look up the key
"b.c.d.tld". If that key is not found,
\fBmaildrop\fR tries "c.d.tld",
and so on, until a key
is found, or there are no more subdomains to remove, at which point
\fBgdbmfetch\fR
will return either the \fBdefault\fR argument, or empty
text.
.PP
If the \fIoptions\fR argument is set to "D", and the
key could not be
found in the GDBM database, and the key is of the form
"a.b.c.d.tld" (with
variable number of period-separated sections),
\fBmaildrop\fR will also
attempt to look up keys for successive higher-level domains in the GDBM
database.
.sp
.RS
.B "Note:"
GDBM databases are case sensitive.
Make sure that the GDBM database is created using lowercase letters only,
and use the
\fBtolower\fR
function to convert the key to lowercase.
.RE
.PP
If the \fIoptions\fR argument is
"I", and the key is not
in the GDBM database, and the key is of the form "w.x.y.z" (with
variable number of period-separated sections),
\fBmaildrop\fR then tries to
look up the key "w.x.y", then "w.x",
until
a key is found, or there are no more sections to remove. Use this feature to
look up IP-address based GDBM lists.
.sp
.RS
.B "Note:"
These features are implemented by brute force: if the
query doesn't succeed, try again. Take note of potential denial-of-service
attacks where key is set to a long text string consisting mostly of periods,
which will result in numerous GDBM queries that will take an excessive amount
of time to complete.
.RE
.SS "GDBMOPEN - OPEN GDBM FILE"
.sp
.RS
.PP

.nf
gdbmopen (\fIfile\fR [, \fImode\fR])
.fi
.RE
.PP
\fBgdbmopen\fR opens the indicated GDBM file.
The optional second argument specifies the following:
.TP
\fB"R"\fR
Open this GDBM file for reading.
.TP
\fB"W"\fR
Open this GDBM file for reading and writing.
.TP
\fB"C"\fR
Open this GDBM file for reading and writing. If the
GBDM file doesn't exist, create it.
.TP
\fB"N"\fR
Create a new GDBM file. If the file exists, the existing
file is deleted. The file is opened for reading and writing.
.PP
The \fImode\fR argument
defaults to "R" is used. In embedded mode, only
"R" is allowed.
.PP
The GDBM library allows multiple processes to read the same GDBM file at
the same time, but it does not allow multiple access when the GDBM file is
open for writing. Using
\fBflock\fR
or
\fBdotlock\fR
is highly recommended.
.PP
In delivery mode, \fBmaildrop\fR runs from the recipient's home
directory. Keep that in mind while specifying the filename.
.PP
The gdbmopen function returns 0 if the GDBM file was succesfully opened,
non-zero otherwise.
.SS "GDBMSTORE - STORE DATA"
.sp
.RS
.PP

.nf
gdbmstore(\fIkey\fR, \fIvalue\fR)
.fi
.RE
.PP
\fIkey\fR is the key value to store in the GDBM file.
\fIvalue\fR is the
value to store. If \fIkey\fR already exists in the GDBM
file, \fIvalue\fR
replacest the old value.
The \fBgdbmstore\fR function is only
permitted if the GDBM file is opened for writing.
If \fIgdbmopen\fR opened
the GDBM file for reading only, \fBgdbmstore\fR
will return -1. Otherwise, \fBgdbmstore\fR returns 0.
